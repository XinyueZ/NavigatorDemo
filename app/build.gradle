apply plugin: 'com.android.application'

android {

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    configurations {
        all*.exclude module: 'support-v4'
        all*.exclude module: 'mediarouter-v7'
    }

    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION

    defaultConfig {
        multiDexEnabled = true

        applicationId project.APP_APPLICATIONID
        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)

        versionName project.APP_VERSIONNAME
        versionCode Integer.parseInt(project.APP_VERSIONCODE)

        testInstrumentationRunner project.TEST_RUNNER
        vectorDrawables.useSupportLibrary = true
    }

    dataBinding {
        enabled = true
    }



    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        htmlReport true
        textReport true
        textOutput 'stdout'
        abortOnError false
    }
}




dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //UITest
    androidTestImplementation("com.android.support.test:rules:${testRules}", {
        exclude group: 'com.android.support'
    })
    androidTestImplementation("com.android.support.test:runner:${testRunner}", {
        exclude group: 'com.android.support'
    })
    androidTestImplementation("com.android.support.test.espresso:espresso-core:${espresso}", {
        exclude group: 'com.android.support'
    })
    androidTestImplementation("com.android.support.test.espresso:espresso-web:${espresso}", {
        exclude group: 'com.android.support'
    })
    implementation("com.android.support.test.espresso:espresso-idling-resource:${espresso}", {
        exclude group: 'com.android.support'
    })
    androidTestImplementation("com.android.support.test.espresso:espresso-contrib:${espresso}", {
        exclude group: 'com.android.support'
    })
    androidTestImplementation("com.android.support.test.espresso:espresso-intents:${espresso}", {
        exclude group: 'com.android.support'
    })

    //UnitTest
    testImplementation "junit:junit:${junit}"
    androidTestImplementation "org.mockito:mockito-core:${mockitoVersion}"
    androidTestImplementation "com.google.dexmaker:dexmaker:${dexmakerVersion}"
    androidTestImplementation "com.google.dexmaker:dexmaker-mockito:${dexmakerVersion}"
    testImplementation "junit:junit:${junit}"
    testImplementation "org.mockito:mockito-all:${mockitoVersion}"
    testImplementation "org.hamcrest:hamcrest-all:${hamcrestVersion}"

    //Support libraries
    implementation "com.android.support:design:${appCompatVersion}"
    implementation "com.android.support:multidex:${multidexVersion}"
    implementation "com.android.support:customtabs:${appCompatVersion}"
    implementation "com.android.support:appcompat-v7:${appCompatVersion}"
    implementation "com.android.support:support-compat:${appCompatVersion}"
    implementation "com.android.support:recyclerview-v7:${appCompatVersion}"
    implementation "com.android.support:support-core-ui:${appCompatVersion}"
    implementation "com.android.support:support-fragment:${appCompatVersion}"
    implementation "com.android.support:support-core-utils:${appCompatVersion}"
    implementation "com.android.support:support-annotations:${appCompatVersion}"
    implementation "com.android.support:support-media-compat:${appCompatVersion}"

    //Google libs
    implementation "de.greenrobot:eventbus:${bus}"
    implementation "com.google.code.gson:gson:${gson}"
    implementation "com.google.dagger:dagger:${dagger}"
    annotationProcessor "com.google.dagger:dagger-compiler:${dagger}"

    //Rx for android
    implementation "io.reactivex.rxjava2:rxandroid:${rxandroid}"
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:${rxandroidAdapter}"
    //Instead this official adapter, more info
    // see https://github.com/JakeWharton/retrofit2-rxjava2-adapter
    // see http://stackoverflow.com/questions/35233161/illegalargumentexception-could-not-locate-call-adapter-for-rx-observable-rxjava
    //compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    //Official Retrofit
    implementation "com.squareup.retrofit2:retrofit:${retrofit}"
    implementation "com.squareup.retrofit2:retrofit-mock:${retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofit}"

    implementation "com.github.castorflex.smoothprogressbar:library:${smoothprogressbar}"
}
